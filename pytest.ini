[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --asyncio-mode=auto
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
    --timeout=30
    --timeout-method=thread

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    database: marks tests that require database
    api: marks tests that test API endpoints
    health: marks health check tests

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Test environment
env =
    TESTING=true
    ENVIRONMENT=test
    DATABASE_PATH=./test_travelplanner.db
    UPLOAD_PATH=./test_uploads
    LOG_LEVEL=debug
    LOAD_TEST_DATA=false

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Timeout configuration
[tool:pytest-timeout]
timeout = 30
timeout_method = thread

# Async configuration
[tool:pytest-asyncio]
asyncio_mode = auto
